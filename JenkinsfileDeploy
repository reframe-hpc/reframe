def tag = env.TAG_NAME
def version = tag.substring(1)      // Remove the first character of the tag which is 'v'
def machines = '[dom daint TSAtds]' // To be included in the PR title
def reviewersPR = 'teojgo,vkarak'   // The Github usernames requested for review
def ebTemplate = '3.0-dev5'         // The eb recipe of ReFrame to use as template

stage('Deploy Tests') {
    node('daint') {
        dir('private_tests') {
            sh(returnStatus: true,
               script: """#!/bin/bash -l
                          git clone git@github.com:eth-cscs/reframe-tests.git
                          cd reframe-tests
                          git tag -a -m "ReFrame private tests ${version} release" -f ${tag}
                          git archive --format=tar.gz --prefix=reframe-tests-${version}/ ${tag} -o reframe-tests-${version}.tar.gz
                          git push origin -f ${tag}
                          cp reframe-tests-${version}.tar.gz /apps/common/easybuild/sources/r/reframe
                          """)
            deleteDir()
        }
    }
}

stage('Production PR') {
    node('daint') {
        dir('production_repo') {
            sh(returnStatus: true,
               script: """#!/bin/bash -l
                          module load daint-gpu
                          module load hub
                          git clone git@github.com:eth-cscs/production.git
                          cd production/easybuild/easyconfigs/r/reframe
                          git checkout -b reframe/${version}
                          sed -r "s/(version\\s*=\\s*)'${ebTemplate}'/\\1'${version}'/g" reframe-${ebTemplate}.eb > reframe-${version}.eb
                          git add reframe-${version}.eb
                          git commit -m "Add recipe for ReFrame version ${version}"
                          git push origin HEAD
                          hub pull-request -r ${reviewersPR} -m "${machines} Add recipe for ReFrame version ${version}"
                          """)
        deleteDir()
        }
    }
}
